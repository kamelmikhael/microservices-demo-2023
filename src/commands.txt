============================================================= docker
hub.docker.com --> website

docker pull mongo

docker run -d -p 27017:27017 --name shopping-mongo mongo

docker ps

docker ps -a

docker start <container-id>

docker stop <container-id>

docker rm <container-id>

docker ps -aq

docker stop $(docker ps -aq)

docker rm $(docker ps -aq)

docker images

docker rmi <image-id>

docker rmi $(docker ps -aq)

docker system prune

docker logs -f shopping-mongo

docker exec -it shopping-mongo /bin/bash

docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml up -d 

docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml up --build //build all apps

docker-compose -f .\docker-compose.yml -f .\docker-compose.override.yml down

docker run -d -p 3000:3000 mongoclient/mongoclient

docker pull redis

docker run -d -p 6379:6379 --name basket-redis redis

docker exec -it basket-redis /bin/bash

redis-cli

============================================================= Portainer.io
Portainer.readhedocs.io

============================================================= postgres
docker pull postgres

============================================================= pgadmin.org
docker pull dpage/pgadmin4

============================================================= Redis 
ping

set [key] [value]

get [key]



============================================================= Mongo
ls
mongosh
show dbs
use CatalogDb
db.createCollection('Products')
db.Products.insertMany([
{
	"Name": "Product #1",
	"Category": "Computers",
	"Summery": "Summery",
	"Description": "Description",
	"ImageFile": "ImageFile",
	"Price": 19.99
},
{
	"Name": "Product #2",
	"Category": "Computers",
	"Summery": "Summery",
	"Description": "Description",
	"ImageFile": "ImageFile",
	"Price": 19.99
}
])
db.Products.find({}).pretty()
db.Products.remove({})
show collections